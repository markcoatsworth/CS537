align - Check that the forst pointer returned is 8-byte aligned
align2 - 8-byte alignment check for four allocations
align3 - A lot of odd sized allocations for 8 byte alignment check
alloc - One 16 byte allocation test
alloc2 - Four different sized allocations test
alloc3 - Many odd sized allocations
badfree - Freeing a pointer not returned by Mem_Alloc
badinit - Bad argument to Mem_Init
coalesce - Allocate 4 800 byte chunks and rest to 800 byte chunks till full, free first two 800 byte chunks and allocate 1600 byte chunk
coalesce2 - Allocate 4 800 byte chunks and rest to 800 byte chunks till full, free first three 800 byte chunks and allocate 2400 byte chunk
coalesce3 - Check for coalescing of the last chunk
doubleinit - Try to call Mem_Init twice
free - A 8 byte allocation followed by it's free
free2 - Two different sized allocations followed by two frees then followed by another two different sized allocations followed by their frees
free3 - A lot of interspersed different sized allocations and frees
init - Test Mem_Init by a size of 4096
init2 - Mem_Init with 1, try to allocate a chunk of 4048
nospace - Mem_Init with 4096, allocate a chunk of size 2048. Another allocation for size 2049 should fail
nullfree - Trying to free a NULL pointer
writeable - Writes a single integer to the pointer returned after a 8 byte allocation
writeable2 - Allocate 4 chunks of sizes 1, 12, 31 and 4 respectively, fill them with a, b, c and d respectively and compare if anything got overlapped
